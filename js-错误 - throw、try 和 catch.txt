定义和用法
	try 语句测试代码块的错误。
	catch 语句处理错误。
	throw 语句创建自定义错误。
	finally 语句在 try 和 catch 之后无论有无异常都会执行。

语法
try {
    tryCode - 尝试执行代码块
}
catch(err) {
    catchCode - 捕获错误的代码块
} 
finally {
    finallyCode - 无论 try / catch 结果如何都会执行的代码块
}

	
1.总之就是!
	在try{}里面添加语句,错误了,就会显示catch(err){}里的语句
		如果try{}里面的语句没写错,就不会出现catch(err){}里的语句.
		事实上,只要try{}里面的语句没错误,那无论catch(err){}里面有什么都不会显示
	
	如:
	try{
		aalert('aaa'); //因为aalert()多打了个a,
	}
	catch(err) {
		//所以这个函数会被执行,
    		document.getElementById("demo").innerHTML = err.message;
		//err.message,显示错误信息.
	}

	而finally{}这个,无论try{}有没有错误,它都会执行里面的语句.
		当然,如果里面的语句不是输出语句,那即便执行了也不会报错.
		所以,如果仅仅是提示错误的话,就选择alert(),或控制台console.log()

	如:
	finally {
        	alert('执行成功!');
		console.log();
 	   }
	
2.随便一提:
	文本输出的有
		document.write();  //这个会覆盖掉已有的部分,所以小心
		document.getElementById("demo").innerHTML="我的第一段 JavaScript";

3.抱歉!把 throw 给忘了*_*
	在try{}里执行throw作为输出，就可以在catch(err){}函数中调入形参.
	即throw 后面的内容,将作为catch(err){}函数的形参变量使用.

	如:
	try { 
       		 if(x == "")  throw "为空";
       		 if(isNaN(x)) throw "不是一个数字";
       		 if(x > 10)   throw "太大";
        	if(x < 5)    throw "太小";
   	 }

	 catch(err) {
       		 message.innerHTML = "输入的值 " + err;
    	    }

实例0:

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>菜鸟教程(runoob.com)</title>
</head>
<body>
<p>try 语句块中的函数未定义：</p>
<p id="demo"></p>

<script>
try {
    adddlert("欢迎光临！");
}
catch(err) {
    document.getElementById("demo").innerHTML = err.message;
}
</script>

</body>
</html>


实例1:
	
<body>

<p>请输入 5 到 10 之间的数:</p>

<input id="demo" type="text">
<button type="button" onclick="myFunction()">检测输入</button>

<p id="message"></p>

<script>
function myFunction() {
    var message, x;
    message = document.getElementById("message");
    message.innerHTML = "";
    x = document.getElementById("demo").value;
    try { 
        if(x == "")  throw "为空";
        if(isNaN(x)) throw "不是一个数字";
        if(x > 10)   throw "太大";
        if(x < 5)    throw "太小";
    }
    catch(err) {
        message.innerHTML = "输入的值 " + err;
    }
    finally {
        document.getElementById("demo").value = "";
    }
}
</script>

</body>

实例2:

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>菜鸟教程(runoob.com)</title>
<script>
var txt="";
function message(){
	try {
		adddlert("Welcome guest!");
	}
	catch(err) {
		txt="本页有一个错误。\n\n";
		txt+="错误描述：" + err.message + "\n\n";
		txt+="点击确定继续。\n\n";
		alert(txt);
	}
}
</script>
</head>
<body>

<input type="button" value="查看消息" onclick="message()" />

</body>
</html>